{"version":3,"file":"state.umd.js","sources":["../lib/Signal.js","../lib/createStore.js","../node_modules/mini-runner/mini-runner.min.js","../node_modules/mini-signals/src/mini-signals.js","../node_modules/eventemitter3/index.js","demo.js"],"sourcesContent":["function SignalListener (owner, fn, ctx, once) {\n  this.fn = fn\n  this.ctx = ctx || null\n  this.owner = owner\n  this.once = !!once\n}\n\nfunction removeNode (owner, node) {\n  if (node.prev) node.prev.next = node.next\n  if (node.next) node.next.prev = node.prev\n  node.ctx = node.fn = node.owner = null\n  if (node === owner._first) owner._first = node.next\n  if (node === owner._last) owner._last = node.prev\n}\n\n\n/**\n * Create a new Signal instance\n * @class\n * @constructor\n * @return {Signal} A new signal\n * @example\n * import { Signal } from '@internet/state'\n * const click = new Signal()\n * document.addEventListener('click', click.dispatch)\n *\n * class Component {\n *   constructor () {\n *     click.listen(this.onClick, this)\n *   }\n *\n *   onClick () {\n *     // `this` is the component instance\n *     console.log('clicked')\n *   }\n *\n *   dispose () {\n *     click.unlisten(this.onClick, this)\n *   }\n * }\n */\nfunction Signal () {}\n\n/**\n * Dispatches the signal to all listeners.\n * @method\n * @param {...*} [arguments] Arguments passed to each listeners (:warning: 5 maximum)\n */\nSignal.prototype.dispatch = function (a0, a1, a2, a3, a4) {\n  var node = this._first\n  while (node) {\n    node.fn.call(node.ctx, a0, a1, a2, a3, a4)\n    node.once && this.unlisten(node)\n    node = node.next\n  }\n}\n\n/**\n * Register a new listener\n * @method\n * @param {Function} callback Callback function\n * @param {*} [context] The context to bind the callback to\n * @return {SignalListener} A SignalListener instance containing bindings to the signal.\n */\nSignal.prototype.listen = function (fn, ctx, once) {\n  var node = new SignalListener(this, fn, ctx, once)\n  if (!this._first) {\n    this._first = node\n    this._last = node\n  } else {\n    this._last.next = node\n    node.prev = this._last\n    this._last = node\n  }\n  return node\n}\n\n/**\n * Register a new listener that will be executed only once.\n * @method\n * @param {Function} callback Callback function\n * @param {*} [context] The context to bind the callback to\n * @return {SignalListener} A SignalListener instance containing bindings to the signal.\n */\nSignal.prototype.listenOnce = function (fn, ctx) {\n  return this.listen(fn, ctx, true)\n}\n\n/**\n * Detach a listener from the signal\n * You can also pass\n * @method\n * @param {(Function|SignalListener)} callback The callback used when listening to the signal **OR** The SignalListener instance returned when listening the signal\n * @param {*} [context] The context used when listening to the signal (only when the 1st arg is a function)\n * @example\n * import { Signal } from '@internet/state'\n * const signal = new Signal()\n *\n * // Using the SignalListener binding (better performances)\n * const binding = signal.listen(() => {})\n * signal.unlisten(binding)\n *\n * // Using function\n * function listener () {}\n * signal.listen(listener)\n * signal.unlisten(listener)\n */\nSignal.prototype.unlisten = function (fn, ctx) {\n  if (fn instanceof SignalListener) return removeNode(this, fn)\n  if (!ctx) ctx = null\n  var node = this._first\n  while (node) {\n    if (node.fn === fn && node.ctx === ctx) removeNode(this, node)\n    node = node.next\n  }\n}\n\n/**\n * Remove all listeners attached to the signal instance\n * @method\n */\nSignal.prototype.unlistenAll = function () {\n  var node = this._first\n  this._first = this._last = null\n  while (node) {\n    removeNode(this, node)\n    node = node.next\n  }\n}\n\nexport default Signal\n","'use strict'\n\nimport Signal from './Signal'\n\n/**\n * StoreSignal created by [createStore](#createStore).\n * Inherits from [Signal](#Signal) - See its API for `listen` / `unlisten` methods\n *\n * :warning: `dispatch()` method from Signal is removed and replaced by a `set()` method\n * @param {*} initialValue Initial value\n * @augments Signal\n * @return {StoreSignal} StoreSignal instance\n */\nfunction StoreSignal (value) { this.current = value }\nStoreSignal.prototype = Object.create(Signal.prototype)\nStoreSignal.prototype.constructor = StoreSignal\n// StoreSignal.prototype.dispatch = undefined\n\n/**\n * Change the stored value. Dispatch to all listeners the new value\n * @method\n * @param {*} newValue New value to store\n * @param {boolean} [force=false] Nothing is distpatched if the value doesn't change. Set force to true to `force` the dispatch.\n * @return {SignalListener} A SignalListener instance containing bindings to the signal.\n */\nStoreSignal.prototype.set = function (value, force) {\n  if (!force && this.current === value) return\n  this.current = value\n  var node = this._first\n  while (node) {\n    node.once && this.unlisten(node)\n    node.fn.call(node.ctx, this.current)\n    node = node.next\n  }\n}\n\n/**\n * Get current stored value\n * @method\n * @return {*} Current stored value\n */\nStoreSignal.prototype.get = function (value) {\n  return this.current\n}\n\n/**\n * Create a new store containing [StoreSignal](#StoreSignal) instances\n * @param {Object} state Initial state\n * @return {Object} Frozen object containing [StoreSignal](#StoreSignal) instances\n * @example\n * import { createStore } from '@internet/state'\n * const store = createStore({\n *   value: 0\n * })\n *\n * store.value.listen(v => console.log(`value is now ${v}`))\n * store.value.set(3)\n */\nfunction createStore (state) {\n  var signals = {}\n  for (var k in state) signals[k] = new StoreSignal(state[k])\n  signals = Object.freeze(signals)\n  return signals\n}\n\nexport default createStore\n","var MiniRunner=function(t){this.items=[],this._name=t},p=MiniRunner.prototype;p.emit=function(t,e,i,n,s,r,h,m){if(arguments.length>8)throw\"max arguments reached\";for(var u=this.items,o=this._name,p=0,a=u.length;p<a;p++)u[p][o](t,e,i,n,s,r,h,m);return this},p.dispatch=p.emit,p.run=p.emit,p.add=function(t){return t[this._name]&&(this.remove(t),this.items.push(t)),this},p.remove=function(t){var e=this.items.indexOf(t);return e!==-1&&this.items.splice(e,1),this},p.contains=function(t){return this.items.indexOf(t)!==-1},p.removeAll=function(){return this.items.length=0,this},p.destroy=function(){this.removeAll(),this.items=null,this._name=null},Object.defineProperties(p,{empty:{get:function(){return 0===this.items.length}},name:{get:function(){return this._name}}}),module.exports=MiniRunner;","/* jshint -W097 */\n\nexport class MiniSignalBinding {\n\n  /**\n  * MiniSignalBinding constructor.\n  * @constructs MiniSignalBinding\n  * @param {Function} fn Event handler to be called.\n  * @param {Boolean} [once=false] Should this listener be removed after dispatch\n  * @param {Mixed} [thisArg] The context of the callback function.\n  * @api private\n  */\n  constructor (fn, once = false, thisArg) {\n    this._fn = fn;\n    this._once = once;\n    this._thisArg = thisArg;\n    this._next = this._prev = this._owner = null;\n  }\n\n  detach () {\n    if (this._owner === null) return false;\n    this._owner.detach(this);\n    return true;\n  }\n\n}\n\n/**\n* @private\n*/\nfunction _addMiniSignalBinding (self, node) {\n  if (!self._head) {\n    self._head = node;\n    self._tail = node;\n  } else {\n    self._tail._next = node;\n    node._prev = self._tail;\n    self._tail = node;\n  }\n\n  node._owner = self;\n\n  return node;\n}\n\nexport class MiniSignal {\n\n  /**\n  * MiniSignal constructor.\n  * @constructs MiniSignal\n  * @api public\n  *\n  * @example\n  * let mySignal = new MiniSignal();\n  * let binding = mySignal.add(onSignal);\n  * mySignal.dispatch('foo', 'bar');\n  * mySignal.detach(binding);\n  */\n  constructor () {\n    this._head = this._tail = undefined;\n  }\n\n  /**\n  * Return an array of attached MiniSignalBinding.\n  *\n  * @param {Boolean} [exists=false] We only need to know if there are handlers.\n  * @returns {MiniSignalBinding[]|Boolean} Array of attached MiniSignalBinding or Boolean if called with exists = true\n  * @api public\n  */\n  handlers (exists = false) {\n    let node = this._head;\n\n    if (exists) return !!node;\n\n    const ee = [];\n\n    while (node) {\n      ee.push(node);\n      node = node._next;\n    }\n\n    return ee;\n  }\n\n  /**\n  * Return true if node is a MiniSignalBinding attached to this MiniSignal\n  *\n  * @param {MiniSignalBinding} node Node to check.\n  * @returns {Boolean} True if node is attache to mini-signal\n  * @api public\n  */\n  has (node) {\n    if (!(node instanceof MiniSignalBinding)) {\n      throw new Error('MiniSignal#has(): First arg must be a MiniSignalBinding object.');\n    }\n\n    return node._owner === this;\n  }\n\n  /**\n  * Dispaches a signal to all registered listeners.\n  *\n  * @returns {Boolean} Indication if we've emitted an event.\n  * @api public\n  */\n  dispatch () {\n    let node = this._head;\n\n    if (!node) return false;\n\n    while (node) {\n      if (node._once) this.detach(node);\n      node._fn.apply(node._thisArg, arguments);\n      node = node._next;\n    }\n\n    return true;\n  }\n\n  /**\n  * Register a new listener.\n  *\n  * @param {Function} fn Callback function.\n  * @param {Mixed} [thisArg] The context of the callback function.\n  * @returns {MiniSignalBinding} The MiniSignalBinding node that was added.\n  * @api public\n  */\n  add (fn, thisArg = null) {\n    if (typeof fn !== 'function') {\n      throw new Error('MiniSignal#add(): First arg must be a Function.');\n    }\n    return _addMiniSignalBinding(this, new MiniSignalBinding(fn, false, thisArg));\n  }\n\n  /**\n  * Register a new listener that will be executed only once.\n  *\n  * @param {Function} fn Callback function.\n  * @param {Mixed} [thisArg] The context of the callback function.\n  * @returns {MiniSignalBinding} The MiniSignalBinding node that was added.\n  * @api public\n  */\n  once (fn, thisArg = null) {\n    if (typeof fn !== 'function') {\n      throw new Error('MiniSignal#once(): First arg must be a Function.');\n    }\n    return _addMiniSignalBinding(this, new MiniSignalBinding(fn, true, thisArg));\n  }\n\n  /**\n  * Remove binding object.\n  *\n  * @param {MiniSignalBinding} node The binding node that will be removed.\n  * @returns {MiniSignal} The instance on which this method was called.\n  * @api public */\n  detach (node) {\n    if (!(node instanceof MiniSignalBinding)) {\n      throw new Error('MiniSignal#detach(): First arg must be a MiniSignalBinding object.');\n    }\n    if (node._owner !== this) return this;  // todo: or error?\n\n    if (node._prev) node._prev._next = node._next;\n    if (node._next) node._next._prev = node._prev;\n\n    if (node === this._head) {  // first node\n      this._head = node._next;\n      if (node._next === null) {\n        this._tail = null;\n      }\n    } else if (node === this._tail) {  // last node\n      this._tail = node._prev;\n      this._tail._next = null;\n    }\n\n    node._owner = null;\n    return this;\n  }\n\n  /**\n  * Detach all listeners.\n  *\n  * @returns {MiniSignal} The instance on which this method was called.\n  * @api public\n  */\n  detachAll () {\n    let node = this._head;\n    if (!node) return this;\n\n    this._head = this._tail = null;\n\n    while (node) {\n      node._owner = null;\n      node = node._next;\n    }\n    return this;\n  }\n}\n\nexport default MiniSignal;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { createStore, Signal } from '../lib'\nimport Runner from 'mini-runner'\nimport MiniSignal from 'mini-signals'\nimport EventEmitter from 'eventemitter3'\n\nclass Listener {\n  constructor () { this.time = 0 }\n  update () { this.time++ }\n}\n\nconst EVENTCOUNT = 1000\nconst DISPATCHCOUNT = 2000\n\nconst a = createStore({ updateStore: 0 })\nconst updateStore = a.updateStore\nconst updateRunner = new Runner('update')\nconst updateMiniSignal = new MiniSignal()\nconst updateEvent = new EventEmitter()\nconst updateSignal = new Signal()\nconst pre = document.querySelector('pre')\nlet listeners = []\n\nfor (let i = 0; i < EVENTCOUNT; i++) {\n  var listener = new Listener()\n  updateRunner.add(listener)\n  updateSignal.listen(listener.update, listener)\n  updateMiniSignal.add(listener.update, listener)\n  updateEvent.on('update', listener.update, listener)\n  updateStore.listen(listener.update, listener)\n  listeners.push(listener)\n}\n\nlet i\nlet start\nlet time\nlet cycles = DISPATCHCOUNT\n\npre.innerHTML += EVENTCOUNT + ' Events \\n'\npre.innerHTML += DISPATCHCOUNT + ' Dispatches \\n'\npre.innerHTML += '\\n---\\n\\n'\n\n// SIGNAL\nstart = performance.now()\nfor (i = 0; i < cycles; i++) updateSignal.dispatch()\ntime = performance.now() - start\npre.innerHTML += 'Signal ' + time + 'ms \\n'\n\n// SIGNALSTORE\nstart = performance.now()\nfor (i = 0; i < cycles; i++) updateStore.set(0, true)\ntime = performance.now() - start\npre.innerHTML += 'StoreSignal ' + time + 'ms \\n'\n\npre.innerHTML += '\\n---\\n\\n'\n\n//RUNNER\nstart = performance.now()\nfor (i = 0; i < cycles; i++) updateRunner.emit()\ntime = performance.now() - start;\npre.innerHTML += 'MiniRunner ' + time + 'ms \\n'\n\n// MINI-SIGNALS\nstart = performance.now()\nfor (i = 0; i < cycles; i++) updateMiniSignal.dispatch()\ntime = performance.now() - start\npre.innerHTML += 'mini-signals ' + time + 'ms \\n'\n\n// EVENTS\nstart = performance.now()\nfor (i = 0; i < cycles; i++) updateEvent.emit('update')\ntime = performance.now() - start\npre.innerHTML += 'EventEmitter3 ' + time + 'ms \\n'\n"],"names":["SignalListener","owner","fn","ctx","once","this","removeNode","node","prev","next","_first","_last","Signal","StoreSignal","value","current","prototype","dispatch","a0","a1","a2","a3","a4","call","unlisten","listen","listenOnce","unlistenAll","Object","create","constructor","set","force","get","MiniRunner","t","items","_name","p","emit","e","i","n","s","r","h","m","arguments","length","u","o","a","run","add","remove","push","indexOf","splice","contains","removeAll","destroy","defineProperties","empty","name","module","MiniSignalBinding","[object Object]","thisArg","_fn","_once","_thisArg","_next","_prev","_owner","detach","_addMiniSignalBinding","self","_head","_tail","has","hasOwnProperty","prefix","Events","addListener","emitter","event","context","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","l","ee","Array","listenerCount","a5","args","len","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","Listener","time","update","const","start","updateStore","state","signals","k","freeze","createStore","updateRunner","Runner","updateMiniSignal","exists","Error","updateEvent","updateSignal","pre","document","querySelector","innerHTML","EVENTCOUNT","DISPATCHCOUNT","performance","now"],"mappings":"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"}